% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_functions.R
\name{st_nearest_distance_rcpp}
\alias{st_nearest_distance_rcpp}
\title{RcppParallel distance to nearest point}
\usage{
st_nearest_distance_rcpp(x, y = NULL, unit = "mi")
}
\arguments{
\item{x.}{Object of class sf/sfc or a matrix of coordinates. If a
matrix of coordinates, use column order from \code{st_coordinates()}.}

\item{y.}{Object of class sf/sfc or a matrix of coordinates. If a
matrix of coordinates, use column order from \code{st_coordinates()}.
If missing, computes distance to nearest non-self element of \code{x}.}

\item{unit.}{Either "mi", "km", or "m". Sets the output distance.}
}
\value{
Matrix of two columns. First column is index corresponding to the
closest row of y. The second column is the distance to that element.
}
\description{
RcppParallel distance to nearest point
}
\section{Examples}{


\if{html}{\out{<div class="sourceCode r">}}\preformatted{library(sf)
nc <- st_read(system.file("shape/nc.shp", package="sf"))
#> Reading layer `nc' from data source 
#>   `/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/sf/shape/nc.shp' 
#>   using driver `ESRI Shapefile'
#> Simple feature collection with 100 features and 14 fields
#> Geometry type: MULTIPOLYGON
#> Dimension:     XY
#> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965
#> Geodetic CRS:  NAD27
st_nearest_distance_rcpp(nc, nc[4:6,])
#> Warning in st_point_on_surface.sfc(x): st_point_on_surface may not give correct
#> results for longitude/latitude data
#> Warning in st_point_on_surface.sfc(y): st_point_on_surface may not give correct
#> results for longitude/latitude data
#> > Distance in miles. To use kilometers use option `unit == 'km'`
#>        [,1]         [,2]
#>   [1,]    2 2.297360e+02
#>   [2,]    2 2.096004e+02
#>   [3,]    2 1.850825e+02
#>   [4,]    1 1.607182e-13
#>   [5,]    2 1.126705e-13
#>   [6,]    3 1.757196e-13
#>   [7,]    1 1.414835e+01
#>   [8,]    3 1.802233e+01
#>   [9,]    2 4.172334e+01
#>  [10,]    2 1.595714e+02
#>  [11,]    2 1.095396e+02
#>  [12,]    2 1.338491e+02
#>  [13,]    2 7.185292e+01
#>  [14,]    2 8.953327e+01
#>  [15,]    2 5.774066e+01
#>  [16,]    2 1.896815e+01
#>  [17,]    1 2.104779e+01
#>  [18,]    2 2.119995e+02
#>  [19,]    2 2.414788e+02
#>  [20,]    1 2.920456e+01
#>  [21,]    3 2.573479e+01
#>  [22,]    2 2.545622e+02
#>  [23,]    2 1.838704e+02
#>  [24,]    2 5.768215e+01
#>  [25,]    2 1.615442e+02
#>  [26,]    2 1.355521e+02
#>  [27,]    2 1.163456e+02
#>  [28,]    3 2.659132e+01
#>  [29,]    2 1.017324e+02
#>  [30,]    2 8.627160e+01
#>  [31,]    2 4.481515e+01
#>  [32,]    2 2.666550e+02
#>  [33,]    2 3.010878e+01
#>  [34,]    2 2.356023e+02
#>  [35,]    2 2.773077e+02
#>  [36,]    2 3.545618e+01
#>  [37,]    2 7.967621e+01
#>  [38,]    2 2.985007e+02
#>  [39,]    2 2.010000e+02
#>  [40,]    2 1.791256e+02
#>  [41,]    2 2.150845e+02
#>  [42,]    2 1.663928e+02
#>  [43,]    2 2.446191e+02
#>  [44,]    3 4.650057e+01
#>  [45,]    1 4.058824e+01
#>  [46,]    2 2.646702e+02
#>  [47,]    2 1.438971e+02
#>  [48,]    2 1.149385e+02
#>  [49,]    2 5.439784e+01
#>  [50,]    2 1.833608e+02
#>  [51,]    2 5.425093e+01
#>  [52,]    2 2.199362e+02
#>  [53,]    2 2.937623e+02
#>  [54,]    2 7.888295e+01
#>  [55,]    2 3.183417e+02
#>  [56,]    1 3.737779e+01
#>  [57,]    3 5.908642e+01
#>  [58,]    2 3.530282e+02
#>  [59,]    2 6.161206e+01
#>  [60,]    2 1.192642e+02
#>  [61,]    2 2.631722e+02
#>  [62,]    2 7.520343e+01
#>  [63,]    2 1.070020e+02
#>  [64,]    2 2.442046e+02
#>  [65,]    2 2.238681e+02
#>  [66,]    2 3.310657e+02
#>  [67,]    2 1.388991e+02
#>  [68,]    2 2.082213e+02
#>  [69,]    2 1.911680e+02
#>  [70,]    2 1.583618e+02
#>  [71,]    2 1.758981e+02
#>  [72,]    2 2.946610e+02
#>  [73,]    2 3.680215e+02
#>  [74,]    2 8.157910e+01
#>  [75,]    2 3.132969e+02
#>  [76,]    2 2.257553e+02
#>  [77,]    2 2.791707e+02
#>  [78,]    2 3.523950e+02
#>  [79,]    2 1.131793e+02
#>  [80,]    3 8.759381e+01
#>  [81,]    2 3.845839e+02
#>  [82,]    2 1.234284e+02
#>  [83,]    2 9.268169e+01
#>  [84,]    2 2.016060e+02
#>  [85,]    2 1.797068e+02
#>  [86,]    2 1.404395e+02
#>  [87,]    1 5.601964e+01
#>  [88,]    2 1.020584e+02
#>  [89,]    2 1.622876e+02
#>  [90,]    2 3.689958e+02
#>  [91,]    2 7.765407e+01
#>  [92,]    2 1.580939e+02
#>  [93,]    2 1.113830e+02
#>  [94,]    2 1.554937e+02
#>  [95,]    1 1.050118e+02
#>  [96,]    2 1.377562e+02
#>  [97,]    2 1.307364e+02
#>  [98,]    2 1.646748e+02
#>  [99,]    2 1.506698e+02
#> [100,]    2 1.638672e+02
}\if{html}{\out{</div>}}
}

